<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd"
	default-lazy-init="false">
	
	<!-- shiro的主过滤器,beanId 和web.xml中配置的filter name需要保持一致 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 安全管理器 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 默认的登陆访问url -->
		<property name="loginUrl" value="/index.htm" />
		<!-- 登陆成功后跳转的url -->
		<property name="successUrl" value="/index.htm" />
		<!-- 没有权限跳转的url -->
		<property name="unauthorizedUrl" value="/index.htm" />
		<!-- 访问地址的过滤规则,从上至下的优先级,如果有匹配的规则,就会返回,不会再进行匹配 -->
		<property name="filterChainDefinitions">
			<value>
				/login.htm=anon,myonePerRequest
				/register=anon
				/unauth.htm =anon
				/shiro-cas=casFilter
				/logout=logout
				/** = user
			</value>
		</property>
		<!-- 声明自定义的过滤器 -->
		<property name="filters">
			<map>
				<entry key="myperms" value-ref="authenticationFilter"></entry>
				<entry key="myonePerRequest" value-ref="myOncePerRequestFilter"></entry>
				<entry key="casFilter">  
                    <bean class="org.apache.shiro.cas.CasFilter">  
                        <!--配置验证错误时的失败页面 /main 为系统登录页面 -->  
                        <property name="failureUrl" value="/login.html" />  
                    </bean>  
                </entry>  
                <!-- 重写shiro的logout，shiro执行完logout后使其跳转到cas的登出地址，执行cas的logout-->  
                <entry key="logoutFilter">  
                    <bean class="org.apache.shiro.web.filter.authc.LogoutFilter">  
                        <property name="redirectUrl"  
                                  value="/login.html"/>  
                    </bean>  
                </entry>  
			</map>
		</property>
	</bean>
	<!-- shiro 自定义Filter -->
	<bean id="authenticationFilter" class="com.ssm.framework.sys.ShiroAuthenticationFilter" />
	<bean id="myOncePerRequestFilter" class="com.ssm.framework.sys.MyOncePerRequestFilter" />
	
	<!-- 权限管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 数据库认证的实现 -->
		<property name="realm" ref="myShiroRealmService" />
		<!--加入cas的工厂-->  
<!--         <property name="subjectFactory" ref="casSubjectFactory"/>   -->
		<!-- session 管理器 -->
		<property name="sessionManager" ref="sessionManager" />
		<!-- 缓存管理器 -->
		<property name="cacheManager" ref="shiroCacheManager"></property>
		<property name="rememberMeManager.cookie.name" value="rememberMe" />
		<property name="rememberMeManager.cookie.path" value="/" />
		<property name="rememberMeManager.cookie.maxAge" value="1209600" />
		<property name="rememberMeManager" ref="rememberMeManager" />
	</bean>
	<!-- 配置多级缓存 认证处理 -->
	<bean id="myShiroRealmService" class="com.ssm.framework.sys.MyShiroRealmService">
		<property name="credentialsMatcher" ref="myCredentialsMatcher" />
		<property name="authorizationCacheName" value="${demo.authorization.cache.name}" />
		<property name="authenticationCacheName" value="${demo.authentication.cache.name}" />
	</bean>
	<!-- 如果要实现cas的remember me的功能，需要用到下面这个bean，并设置到securityManager的subjectFactory中 -->  
<!--     <bean id="casSubjectFactory" class="org.apache.shiro.cas.CasSubjectFactory" />   -->
	<!-- 配置密码验证方式 -->
	<bean id="myCredentialsMatcher" class="com.ssm.framework.sys.MyCredentialsMatcher">
		<constructor-arg ref="cacheManager" />
		<property name="hashAlgorithmName" value="MD5" />
		<property name="hashSalted" value="true" />
		<property name="hashIterations" value="5" />
	</bean>
	<!-- session管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 超时时间 24*60*60*1000(30min) -->
		<property name="globalSessionTimeout" value="86400000" />
		<!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
		<property name="sessionIdCookie" ref="sharesession" />
		<!-- session存储的实现 -->
		<property name="sessionDAO" ref="shiroSessionDao" />
		<!-- 定时检查失效的session -->
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<!-- session 监听 -->
		<property name="sessionListeners">
			<list>
				<ref bean="sessionListener" />
			</list>
		</property>
	</bean>
	<!-- shiro Session 自定义处理 -->
	<bean id="sessionListener" class="com.ssm.framework.sys.ShiroSessionListener">
		<property name="securityManager" ref="securityManager"></property>
	</bean>
	<!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
	<bean id="sharesession" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- cookie的name,对应的默认是 JSESSIONID -->
		<constructor-arg name="name" value="DEMO_SHAREJSESSIONID" />
		<!-- jsessionId的path为 / 用于多个系统共享jsessionId -->
		<property name="path" value="/" />
		<property name="domain" value="www.ssoclient.com"></property>
	</bean>
	<!-- session存储的实现 -->
	<bean id="shiroSessionDao"
		class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="activeSessionsCacheName" value="${demo.session.cache.name}"></property>
<!-- 		<property name="cacheManager" ref="shiroCacheManager" /> -->
	</bean>
	<!-- shiro 缓存处理 -->
	<bean id="shiroCacheManager" class="com.ssm.framework.sys.ShiroCacheManager">
		<property name="cacheType" value="redisCache"/>
		<property name="ehCacheManager" ref="cacheManager" />
		<property name="redisCacheManager" ref="redisCacheManager" />
		<property name="cacheProvider" ref="cacheProvider" />
	</bean>
	
	<bean id="cacheProvider" class="com.ssm.framework.sys.CacheProvider" />
	<!-- 只是为了体现BeanFactoryPostProcessor, BeanPostProcessor操作(和shiro无关) -->
	<bean class="com.ssm.framework.sys.ShiroEventListener"></bean>
	<!-- 起效权限注解,这个很少在web项目中用到,一般是控制url的访问,不是在controller中声明权限注解 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<!-- remenberMe配置 -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" />
		<!-- 默认记住7天（单位：秒） -->
		<property name="maxAge" value="604800" />
	</bean>
	<!-- rememberMe管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cipherKey"
			value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>

	<!-- <bean id="shiroCacheManager" -->
	<!-- class="com.sxj.supervisor.website.login.SupervisorShiroRedisCacheManager"> -->
	<!-- <property name="level" value="REDIS"></property> -->
	<!-- <property name="collections" ref="redisCollections"></property> -->
	<!-- </bean> -->

	<!-- 单机session -->
	<!-- <bean id="shiroCacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" 
		/> -->

	<!-- session 集群 <bean id="shiroCacheManager" class="org.springrain.frame.shiro.ShiroRedisCacheManager"> 
		<property name="cached" ref="redisCached" /> </bean> -->
</beans>